SHELL = /bin/bash

TC_PREFIX := arm-linux-androideabi-
ifeq ($(ARCH), arm64-v8a)
TC_PREFIX := aarch64-linux-android-
endif

EXIST_NDK := $(shell type -P $(TC_PREFIX)gcc 2>/dev/null)

ifeq ($(EXIST_NDK),)
stop_ndk:
	$(error Cannot find NDK gcc in your PATH directories.)
endif

GOAL := all
ifeq ($(MAKECMDGOALS), clean)
GOAL := clean
endif

#======================================================================
# Build Environment (Don't edit these configurations)
#======================================================================
export REL_OUTLIB_DIR := $(REL_OUTPUT_DIR)/$(BUILD_MODE)/$(ARCH)

#======================================================================
# Toolchain setting
#======================================================================
CCACHE := $(shell type -P ccache 2>/dev/null)
MAKE := make --no-print-directory
export CC := $(CCACHE) $(TC_PREFIX)gcc
export CXX := $(CCACHE) $(TC_PREFIX)g++
export AR := $(TC_PREFIX)ar
export STRIP := $(TC_PREFIX)strip

#----------------------------------------------------------------------
# compiler flags
#----------------------------------------------------------------------
CFLAGS := -fpic -ffunction-sections -funwind-tables -no-canonical-prefixes

ifeq ($(ARCH), armeabi)
CFLAGS += -fstack-protector -fomit-frame-pointer -fno-strict-aliasing -finline-limit=64
CFLAGS += -march=armv5te -mtune=xscale -msoft-float -mthumb 
endif

ifeq ($(ARCH), armeabi-v7a)
CFLAGS += -fstack-protector -fomit-frame-pointer -fno-strict-aliasing -finline-limit=64
CFLAGS += -march=armv7-a -mfpu=vfpv3-d16 -mfloat-abi=softfp -mthumb 
endif

ifeq ($(ARCH), arm64-v8a)
CFLAGS += -fstack-protector-strong -fomit-frame-pointer -fstrict-aliasing -funswitch-loops -finline-limit=300
CFLAGS += -D_ANDROID_API=21
endif

CFLAGS += -Wno-psabi -D_REENTRANT -MP -MMD -Wall -Winit-self -Wdeprecated-declarations

ifeq ($(V), 1)
CFLAGS += -Wextra -Wsign-conversion
else
CFLAGS += -Wsign-compare
endif

CFLAGS += -Wno-unused-parameter

ifeq ($(BUILD_MODE), debug)
CFLAGS += -D_DEBUG -O0 -g
else
CFLAGS += -DNDEBUG -O2 -Os
endif

CXXFLAGS := -fno-exceptions -Winvalid-offsetof -Wno-reorder -frtti

export CXXFLAGS
export CFLAGS

#----------------------------------------------------------------
# flags
#----------------------------------------------------------------
export ARFLAGS := crsD
export STRIPFLAGS := --strip-unneeded

#======================================================================
# Make the Projects
#======================================================================
.PHONY: all clean delete libs

all: libs

clean: libs
	@echo

delete:
	@echo "Delete output files for $(ARCH)"
	@$(RM) -rf $(REL_OUTLIB_DIR)

libs: essential_libs project_libs

essential_libs: version pal mem

version:
ifneq ($(GOAL), clean)
ifeq ($(HOST), darwin)
	@sh $(ABS_SRC_ROOT)/00_config/version/version_modify_mac.sh
else
	@sh $(ABS_SRC_ROOT)/00_config/version/version_modify.sh
endif
endif
	@$(MAKE) -C $(ABS_SRC_ROOT)/00_config/version -f Makefile.proj $(GOAL)

pal:
	@$(MAKE) -C $(ABS_SRC_ROOT)/01_pal/pal -f Makefile.proj $(GOAL) 

mem:
	@$(MAKE) -C $(ABS_SRC_ROOT)/02_mem/mem -f Makefile.proj $(GOAL)

#======================================================================
# Include make files
#======================================================================
include ../../projects/project_libs.mak
include merge.mak
-include ../../projects/project_so.mak
#======================================================================

